* 요청은 HTML 문서로부터 날아온다.
웹 서비스에서 사용자들은 웹 브라우저를 통해 HTTP 요청을 API 서버로 보낸다. 이때, HTML 문서가 웹 브라우저에 띄워져 있기 때문에 HTML 문서로부터 HTTP 요청이 날아온다고 볼 수 있는데, 이것을 이해하지 못하면 백엔드 웹 애플리케이션을 제대로 개발할 수 없다.
따라서 백엔드 개발자에게 있어 HTML에 대한 기본적인 이해는 필수이다.

* HTML의 구조
1. HTML 태그에서 사용되는 용어
HTML은 홑화살괄호(<>)로 이루어진 '<html>' 형태의 '태그'라는 단위로 구성되어 있다. HTML 태그는 이름과 속성, 값을 가지며, 속성에 해당하는 값을 지정할 때는 속성 다음에 등호를 붙이고 값은 큰 따옴표(")로 감싸줘야한다.

ex) HTML의 기본 구조
<form action ="./article" method = "post">
    <input type = "text" name = "title">
    <input type = "text" name = "content">
    <input type = "submit">
</form>

* form 태그와 input 태그
HTML의 기본 태그로는 form 태그와 input 태그가 있다. 둘은 서로 다른 모습을 가지고 있는데, form 태그의 경우 여는 태그와 슬래시로 닫는 태그가 있지만, input 태그는 닫는 태그가 없다는 것이 특징이다.

여는 태그와 닫는 태그가 있는 form 태그는 그 사이에 다른 태그를 넣을 수 있고, input 태그는 다른 태그를 넣을 수 없다. 이처럼 닫는 태그가 없는 태그는 특별히 '싱글톤 태그'라고 부른다.

* 주석
HTML 태그에 포함되지 않지만, HTML 코드에서 주석을 나타내는 방법도 반드시 알아두자. HTML 코드에서 주석은 '<!--'로 열어서 '-->'로 닫는다. 주로 소스코드에 대한 설명을 적거나 임시로 특정 코드를 주석 처리해 해당 코드가 없는 것처럼
실행하고 싶을 때 사용한다.

* 최상단 태그 html
HTML 문서의 최상단에는 반드시 html 태그가 들어가고, html 태그 안쪽에는 head 태그와 body 태그가 작성된다. 또한 html 태그에는 'lang'이라는 속성을 별도로 지정할 수 있는데, lang은 해당 페이지가 어떤 언어로 작성되어 있는지를 알려준다.

html 태그 내에 포함되지 않고 밖에 작성하는 태그도 있다. DOCTYPE이라고도 하는데, 해당 HTML 문서가 HTML의 어떤 버전으로 작성된 것인지를 명시하는 기능이다. <!DOCTYPE html>과 같이 버전을 써 주지 않으면 가장 최신 버전의 HTML을
사용하겠다고 선언하는 것과 같다.

* HTML 문서를 설명하기 위한 head 태그
head 태그는 html 태그 안에 들어있는 태그로, 주로 해당 HTML 문서를 설명하는 내용이 들어있다. 이렇게 어떤 데이터를 설명하는 데이터를 메타데이터라고 한다.
- title 태그로 해당 HTML 문서의 제목을 표현한다.
- meta 태그로 캐릭터셋이나 검색 엔진에게 해당 페이지를 크롤링하기 위한 여러 정보를 제공한다.
- link 태그로 css 파일을 불러와 적용한다.

* HTML 문서의 내용이 들어가는 body 태그
body 태그는 사용자의 눈에 보이는 HTML 페이지의 내용이 들어가는 영역이다.

1. 링크를 생성하는 a태그
a 태그는 다른 웹 페이지로 이동할 수 있는 링크를 생성하며, 주소만 넣으면 될 정도로 문법이 간단하다. 여기서 한 가지 불편한 점은 링크를 타고 이동해서 사용자가 원래 페이지로 다시 돌아오고 싶으면 '뒤로가기' 버튼을 눌러야 한다.
이것은 웹 서비스의 사용성을 크게 떨어뜨릴 수 있으므로 현재 창은 그대로 둔 채 새로운 창 혹은 새로운 탭으로 열리도록 바꿔보자. 간단하게 a 태그에 target = "_blank"라는 속성과 값을 추가하면 된다.

2. 이미지를 삽입하는 img 태그
사용할 이미지의 주소를 복사하고 img태그 안에 주소를 넣으면 된다.

3. 자바스크립트를 넣는 script 태그
사용자의 눈에는 보이지 않지만 자바스크립트 코드를 넣을 수 있는 script 태그도 body 태그에 속한다. script 태그는 body 태그 내에서도 가장 마지막에 들어가는데, 자바스크립트 코드가 해당 태그보다 앞에 있는 경우 자바스크립트 코드가
실행되는 시점에는 아직 그 태그가 존재하지 않는 것으로 간주하여 코드가 정상적으로 실행되지 않기 때문이다.

* 웹 브라우저와 서버의 상호작용
웹 브라우저가 서버와 상호작용하는 방법
1. URL을 통한 접속
2. form 태그를 사용하여 form 제출
3. XHR을 사용한 AJAX 요청
4. 웹 소켓을 통한 연결

* URL을 통한 접속
가장 기본적인 형태의 상호작용 방법이다. 사용자는 주로 웹 브라우저에 직접 URL을 입력하여 웹 페이지를 방문하거나 a 태그가 걸려있는 링크를 통해 접근한다. URL을 통한 접속의 경우 HTTP 요청의 종류가 'GET'이다.

* form 태그를 사용하여 form 제출
이 방법은 웹사이트를 이용하면서 자주 보았을 로그인 창이나 게시글 작성 화면에서 보게되는 입력란에 주로 사용된다. URL을 통한 접속의 요청 메서드가 'GET'이었다면 form 태그는 'GET'과 'POST'라는 방식을 모두 사용할 수 있고
주로 'POST'를 사용한다.

* XHR을 사용한 AJAX 요청
앞서 설명한 두 가지 방법은 HTTP 등장 초기부터 사용됐던 서버와의 상호작용 방식으로, 정보를 전송하기 위해 반드시 화면을 새로고침해야 한다는 치명적 단점이 있다. 예를 들어 유튜브를 보면 스크롤을 아래로 내리면 로딩이 되면서
다음 동영상들이 목록에 추가된다. 즉, 화면을 새로고침하지 않으면서 서버에 다음 동영상 목록에 대한 정보를 요청하고 받아오게 되는데, 이를 'XHR을 사용한 AJAX 요청'으로 구현할 수 있다.

* 웹 소켓을 통한 연결
웹 소켓은 앞서 말한 세 가지 방법의 한계를 극복하기 위해 등장했다. 그 한계는 바로 정보 교환을 시작할 수 있는 주체가 오직 '클라이언트'뿐이기 때문에 서버 쪽에서 주도적으로 클라이언트에게 정보를 전달할 수 없다는 것이었다.
웹 소켓은 이러한 서버와 클라이언트 간의 통신을 양방향으로 가능하도록 지원한다. 채팅 서비스를 예로 들어보자. 어떤 채팅방에 참여해 상대가 보낸 메시지는 클라이언트끼리 주고 받는 것이 아니라 서버가 먼저 수신한 메시지를 다른
클라이언트에게 전송해 주는 것이다. 서버가 먼저 새로운 메시지가 있다는 사실을 알게 되면 클라이언트에게 알림을 보내 서버의 변경 내용과 메시지를 전달한다. 새로운 메시지가 있다는 사실을 클라이언트보다 서버가 먼저 알게 되는 것이다.

* form 태그로 서버와 상호작용하는 방법
form 태그는 눈에 보이지 않지만 form 내부에 포함된 input 태그의 입력값들을 웹 서버로 전송한다. 따라서 form 태그는 웹 서버로 전송될 하나의 논리적인 영역이라고 보면 된다. 그 밑에 있는 input 태그가 결국 form이 실제 전송하려는
데이터가 된다. input 태그에는 여러 가지 타입이 있지만, 여기에서는 코드에 입력한 text, submit의 두 가지 타입에 대해서만 살펴본다.

input 태그의 text 타입을 보면 'name'이라는 속성이 들어가 있다. name은 말 그대로 해당 input 태그의 이름을 의미하며, name="title"과 같이 보내는 쪽에서 title로 보냈다면 받는 쪽에서도 title로 받아야 한다.
반면, input 태그의 submit 타입은 'name' 속성이 없다. input 태그의 submit 타입은 웹 서버로 전송되는 것이 아니라 form 태그 내부에서 form을 제출하는 버튼으로서의 역할을 하기 떄문이다.

